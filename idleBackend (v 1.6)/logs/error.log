{"status":404,"level":"error","message":"undefined","timestamp":"2020-12-13T15:17:40.584Z"}
{"message":"{\"message\":\"API does not exist.\",\"statusCode\":404}","level":"error","timestamp":"2020-12-13T15:17:40.584Z"}
{"status":404,"level":"error","message":"undefined","timestamp":"2020-12-13T15:17:40.585Z"}
{"status":404,"level":"error","message":"undefined","timestamp":"2020-12-13T15:17:43.718Z"}
{"message":"{\"message\":\"API does not exist.\",\"statusCode\":404}","level":"error","timestamp":"2020-12-13T15:17:43.719Z"}
{"status":404,"level":"error","message":"undefined","timestamp":"2020-12-13T15:17:43.719Z"}
{"level":"error","message":"undefined","timestamp":"2020-12-13T15:18:02.499Z"}
{"message":"{\"message\":\"WHERE parameter \\\"service_id\\\" has invalid \\\"undefined\\\" value\",\"statusCode\":500}","level":"error","timestamp":"2020-12-13T15:18:02.500Z"}
{"level":"error","message":"undefined","timestamp":"2020-12-13T15:18:02.500Z"}
{"status":404,"level":"error","message":"undefined","timestamp":"2020-12-13T15:18:21.829Z"}
{"message":"{\"message\":\"API does not exist.\",\"statusCode\":404}","level":"error","timestamp":"2020-12-13T15:18:21.830Z"}
{"status":404,"level":"error","message":"undefined","timestamp":"2020-12-13T15:18:21.830Z"}
{"name":"SequelizeDatabaseError","parent":{"fatal":false,"errno":1327,"sqlState":"42000","code":"ER_SP_UNDECLARED_VAR","sql":"SELECT `id`, `queue_number`, `status`, `created_at` AS `createdAt`, `updated_at` AS `updatedAt`, `deleted_at` AS `deletedAt`, `user_id` AS `UserId`, `service_id` AS `ServiceId` FROM `queues` AS `Queue` WHERE `Queue`.`deleted_at` IS NULL LIMIT NaN, 1;"},"original":{"fatal":false,"errno":1327,"sqlState":"42000","code":"ER_SP_UNDECLARED_VAR","sql":"SELECT `id`, `queue_number`, `status`, `created_at` AS `createdAt`, `updated_at` AS `updatedAt`, `deleted_at` AS `deletedAt`, `user_id` AS `UserId`, `service_id` AS `ServiceId` FROM `queues` AS `Queue` WHERE `Queue`.`deleted_at` IS NULL LIMIT NaN, 1;"},"sql":"SELECT `id`, `queue_number`, `status`, `created_at` AS `createdAt`, `updated_at` AS `updatedAt`, `deleted_at` AS `deletedAt`, `user_id` AS `UserId`, `service_id` AS `ServiceId` FROM `queues` AS `Queue` WHERE `Queue`.`deleted_at` IS NULL LIMIT NaN, 1;","level":"error","message":"undefined","timestamp":"2020-12-13T15:19:01.265Z"}
{"message":"{\"message\":\"(conn=464, no: 1327, SQLState: 42000) Undeclared variable: NaN\\nsql: SELECT `id`, `queue_number`, `status`, `created_at` AS `createdAt`, `updated_at` AS `updatedAt`, `deleted_at` AS `deletedAt`, `user_id` AS `UserId`, `service_id` AS `ServiceId` FROM `queues` AS `Queue` WHERE `Queue`.`deleted_at` IS NULL LIMIT NaN, 1; - parameters:[]\",\"statusCode\":500}","level":"error","timestamp":"2020-12-13T15:19:01.267Z"}
{"name":"SequelizeDatabaseError","parent":{"fatal":false,"errno":1327,"sqlState":"42000","code":"ER_SP_UNDECLARED_VAR","sql":"SELECT `id`, `queue_number`, `status`, `created_at` AS `createdAt`, `updated_at` AS `updatedAt`, `deleted_at` AS `deletedAt`, `user_id` AS `UserId`, `service_id` AS `ServiceId` FROM `queues` AS `Queue` WHERE `Queue`.`deleted_at` IS NULL LIMIT NaN, 1;"},"original":{"fatal":false,"errno":1327,"sqlState":"42000","code":"ER_SP_UNDECLARED_VAR","sql":"SELECT `id`, `queue_number`, `status`, `created_at` AS `createdAt`, `updated_at` AS `updatedAt`, `deleted_at` AS `deletedAt`, `user_id` AS `UserId`, `service_id` AS `ServiceId` FROM `queues` AS `Queue` WHERE `Queue`.`deleted_at` IS NULL LIMIT NaN, 1;"},"sql":"SELECT `id`, `queue_number`, `status`, `created_at` AS `createdAt`, `updated_at` AS `updatedAt`, `deleted_at` AS `deletedAt`, `user_id` AS `UserId`, `service_id` AS `ServiceId` FROM `queues` AS `Queue` WHERE `Queue`.`deleted_at` IS NULL LIMIT NaN, 1;","level":"error","message":"undefined","timestamp":"2020-12-13T15:19:01.268Z"}
{"name":"SequelizeDatabaseError","parent":{"fatal":false,"errno":1327,"sqlState":"42000","code":"ER_SP_UNDECLARED_VAR","sql":"SELECT `id`, `queue_number`, `status`, `created_at` AS `createdAt`, `updated_at` AS `updatedAt`, `deleted_at` AS `deletedAt`, `user_id` AS `UserId`, `service_id` AS `ServiceId` FROM `queues` AS `Queue` WHERE (`Queue`.`deleted_at` IS NULL AND `Queue`.`service_id` = 10) LIMIT NaN, 1;"},"original":{"fatal":false,"errno":1327,"sqlState":"42000","code":"ER_SP_UNDECLARED_VAR","sql":"SELECT `id`, `queue_number`, `status`, `created_at` AS `createdAt`, `updated_at` AS `updatedAt`, `deleted_at` AS `deletedAt`, `user_id` AS `UserId`, `service_id` AS `ServiceId` FROM `queues` AS `Queue` WHERE (`Queue`.`deleted_at` IS NULL AND `Queue`.`service_id` = 10) LIMIT NaN, 1;"},"sql":"SELECT `id`, `queue_number`, `status`, `created_at` AS `createdAt`, `updated_at` AS `updatedAt`, `deleted_at` AS `deletedAt`, `user_id` AS `UserId`, `service_id` AS `ServiceId` FROM `queues` AS `Queue` WHERE (`Queue`.`deleted_at` IS NULL AND `Queue`.`service_id` = 10) LIMIT NaN, 1;","level":"error","message":"undefined","timestamp":"2020-12-13T15:20:39.898Z"}
{"message":"{\"message\":\"(conn=466, no: 1327, SQLState: 42000) Undeclared variable: NaN\\nsql: SELECT `id`, `queue_number`, `status`, `created_at` AS `createdAt`, `updated_at` AS `updatedAt`, `deleted_at` AS `deletedAt`, `user_id` AS `UserId`, `service_id` AS `ServiceId` FROM `queues` AS `Queue` WHERE (`Queue`.`deleted_at` IS NULL AND `Queue`.`service_id` = 10) LIMIT NaN, 1; - parameters:[]\",\"statusCode\":500}","level":"error","timestamp":"2020-12-13T15:20:39.899Z"}
{"name":"SequelizeDatabaseError","parent":{"fatal":false,"errno":1327,"sqlState":"42000","code":"ER_SP_UNDECLARED_VAR","sql":"SELECT `id`, `queue_number`, `status`, `created_at` AS `createdAt`, `updated_at` AS `updatedAt`, `deleted_at` AS `deletedAt`, `user_id` AS `UserId`, `service_id` AS `ServiceId` FROM `queues` AS `Queue` WHERE (`Queue`.`deleted_at` IS NULL AND `Queue`.`service_id` = 10) LIMIT NaN, 1;"},"original":{"fatal":false,"errno":1327,"sqlState":"42000","code":"ER_SP_UNDECLARED_VAR","sql":"SELECT `id`, `queue_number`, `status`, `created_at` AS `createdAt`, `updated_at` AS `updatedAt`, `deleted_at` AS `deletedAt`, `user_id` AS `UserId`, `service_id` AS `ServiceId` FROM `queues` AS `Queue` WHERE (`Queue`.`deleted_at` IS NULL AND `Queue`.`service_id` = 10) LIMIT NaN, 1;"},"sql":"SELECT `id`, `queue_number`, `status`, `created_at` AS `createdAt`, `updated_at` AS `updatedAt`, `deleted_at` AS `deletedAt`, `user_id` AS `UserId`, `service_id` AS `ServiceId` FROM `queues` AS `Queue` WHERE (`Queue`.`deleted_at` IS NULL AND `Queue`.`service_id` = 10) LIMIT NaN, 1;","level":"error","message":"undefined","timestamp":"2020-12-13T15:20:39.899Z"}
{"name":"SequelizeDatabaseError","parent":{"fatal":false,"errno":1327,"sqlState":"42000","code":"ER_SP_UNDECLARED_VAR","sql":"SELECT `id`, `queue_number`, `status`, `created_at` AS `createdAt`, `updated_at` AS `updatedAt`, `deleted_at` AS `deletedAt`, `user_id` AS `UserId`, `service_id` AS `ServiceId` FROM `queues` AS `Queue` WHERE (`Queue`.`deleted_at` IS NULL AND `Queue`.`service_id` = 10) LIMIT NaN, 1;"},"original":{"fatal":false,"errno":1327,"sqlState":"42000","code":"ER_SP_UNDECLARED_VAR","sql":"SELECT `id`, `queue_number`, `status`, `created_at` AS `createdAt`, `updated_at` AS `updatedAt`, `deleted_at` AS `deletedAt`, `user_id` AS `UserId`, `service_id` AS `ServiceId` FROM `queues` AS `Queue` WHERE (`Queue`.`deleted_at` IS NULL AND `Queue`.`service_id` = 10) LIMIT NaN, 1;"},"sql":"SELECT `id`, `queue_number`, `status`, `created_at` AS `createdAt`, `updated_at` AS `updatedAt`, `deleted_at` AS `deletedAt`, `user_id` AS `UserId`, `service_id` AS `ServiceId` FROM `queues` AS `Queue` WHERE (`Queue`.`deleted_at` IS NULL AND `Queue`.`service_id` = 10) LIMIT NaN, 1;","level":"error","message":"undefined","timestamp":"2020-12-13T15:22:00.387Z"}
{"message":"{\"message\":\"(conn=470, no: 1327, SQLState: 42000) Undeclared variable: NaN\\nsql: SELECT `id`, `queue_number`, `status`, `created_at` AS `createdAt`, `updated_at` AS `updatedAt`, `deleted_at` AS `deletedAt`, `user_id` AS `UserId`, `service_id` AS `ServiceId` FROM `queues` AS `Queue` WHERE (`Queue`.`deleted_at` IS NULL AND `Queue`.`service_id` = 10) LIMIT NaN, 1; - parameters:[]\",\"statusCode\":500}","level":"error","timestamp":"2020-12-13T15:22:00.387Z"}
{"name":"SequelizeDatabaseError","parent":{"fatal":false,"errno":1327,"sqlState":"42000","code":"ER_SP_UNDECLARED_VAR","sql":"SELECT `id`, `queue_number`, `status`, `created_at` AS `createdAt`, `updated_at` AS `updatedAt`, `deleted_at` AS `deletedAt`, `user_id` AS `UserId`, `service_id` AS `ServiceId` FROM `queues` AS `Queue` WHERE (`Queue`.`deleted_at` IS NULL AND `Queue`.`service_id` = 10) LIMIT NaN, 1;"},"original":{"fatal":false,"errno":1327,"sqlState":"42000","code":"ER_SP_UNDECLARED_VAR","sql":"SELECT `id`, `queue_number`, `status`, `created_at` AS `createdAt`, `updated_at` AS `updatedAt`, `deleted_at` AS `deletedAt`, `user_id` AS `UserId`, `service_id` AS `ServiceId` FROM `queues` AS `Queue` WHERE (`Queue`.`deleted_at` IS NULL AND `Queue`.`service_id` = 10) LIMIT NaN, 1;"},"sql":"SELECT `id`, `queue_number`, `status`, `created_at` AS `createdAt`, `updated_at` AS `updatedAt`, `deleted_at` AS `deletedAt`, `user_id` AS `UserId`, `service_id` AS `ServiceId` FROM `queues` AS `Queue` WHERE (`Queue`.`deleted_at` IS NULL AND `Queue`.`service_id` = 10) LIMIT NaN, 1;","level":"error","message":"undefined","timestamp":"2020-12-13T15:22:00.388Z"}
{"status":404,"level":"error","message":"undefined","timestamp":"2020-12-13T15:22:44.418Z"}
{"message":"{\"message\":\"API does not exist.\",\"statusCode\":404}","level":"error","timestamp":"2020-12-13T15:22:44.418Z"}
{"status":404,"level":"error","message":"undefined","timestamp":"2020-12-13T15:22:44.419Z"}
{"status":404,"level":"error","message":"undefined","timestamp":"2020-12-13T15:23:05.324Z"}
{"message":"{\"message\":\"API does not exist.\",\"statusCode\":404}","level":"error","timestamp":"2020-12-13T15:23:05.325Z"}
{"status":404,"level":"error","message":"undefined","timestamp":"2020-12-13T15:23:05.326Z"}
{"status":404,"level":"error","message":"undefined","timestamp":"2020-12-13T15:24:21.302Z"}
{"message":"{\"message\":\"API does not exist.\",\"statusCode\":404}","level":"error","timestamp":"2020-12-13T15:24:21.302Z"}
{"status":404,"level":"error","message":"undefined","timestamp":"2020-12-13T15:24:21.303Z"}
{"level":"error","message":"undefined","timestamp":"2020-12-13T15:24:22.847Z"}
{"message":"{\"message\":\"Services is not defined\",\"statusCode\":500}","level":"error","timestamp":"2020-12-13T15:24:22.848Z"}
{"level":"error","message":"undefined","timestamp":"2020-12-13T15:24:22.849Z"}
{"level":"error","message":"undefined","timestamp":"2020-12-13T15:24:24.321Z"}
{"message":"{\"message\":\"Services is not defined\",\"statusCode\":500}","level":"error","timestamp":"2020-12-13T15:24:24.322Z"}
{"level":"error","message":"undefined","timestamp":"2020-12-13T15:24:24.323Z"}
{"message":"{\"message\":\"jwt expired\",\"statusCode\":401}","level":"error","timestamp":"2020-12-13T15:24:53.933Z"}
{"name":"UnauthorizedError","message":"jwt expired","code":"invalid_token","status":401,"inner":{"name":"TokenExpiredError","message":"jwt expired","expiredAt":"2020-12-13T15:01:09.000Z"},"level":"error","timestamp":"2020-12-13T15:24:53.934Z"}
{"status":404,"level":"error","message":"undefined","timestamp":"2020-12-13T15:28:38.158Z"}
{"message":"{\"message\":\"API does not exist.\",\"statusCode\":404}","level":"error","timestamp":"2020-12-13T15:28:38.158Z"}
{"status":404,"level":"error","message":"undefined","timestamp":"2020-12-13T15:28:38.159Z"}
{"status":404,"level":"error","message":"undefined","timestamp":"2020-12-13T15:31:19.492Z"}
{"message":"{\"message\":\"API does not exist.\",\"statusCode\":404}","level":"error","timestamp":"2020-12-13T15:31:19.492Z"}
{"status":404,"level":"error","message":"undefined","timestamp":"2020-12-13T15:31:19.493Z"}
{"level":"error","message":"undefined","timestamp":"2020-12-13T15:32:04.010Z"}
{"message":"{\"message\":\"Cannot read property 'id' of null\",\"statusCode\":500}","level":"error","timestamp":"2020-12-13T15:32:04.010Z"}
{"level":"error","message":"undefined","timestamp":"2020-12-13T15:32:04.010Z"}
{"level":"error","message":"undefined","timestamp":"2020-12-13T15:32:34.077Z"}
{"message":"{\"message\":\"Cannot read property 'id' of null\",\"statusCode\":500}","level":"error","timestamp":"2020-12-13T15:32:34.077Z"}
{"level":"error","message":"undefined","timestamp":"2020-12-13T15:32:34.078Z"}
{"message":"{\"message\":\"jwt expired\",\"statusCode\":401}","level":"error","timestamp":"2020-12-13T15:33:12.897Z"}
{"name":"UnauthorizedError","message":"jwt expired","code":"invalid_token","status":401,"inner":{"name":"TokenExpiredError","message":"jwt expired","expiredAt":"2020-12-13T14:04:50.000Z"},"level":"error","timestamp":"2020-12-13T15:33:12.898Z"}
{"status":404,"level":"error","message":"undefined","timestamp":"2020-12-13T15:33:19.758Z"}
{"message":"{\"message\":\"API does not exist.\",\"statusCode\":404}","level":"error","timestamp":"2020-12-13T15:33:19.758Z"}
{"status":404,"level":"error","message":"undefined","timestamp":"2020-12-13T15:33:19.759Z"}
{"message":"{\"message\":\"jwt expired\",\"statusCode\":401}","level":"error","timestamp":"2020-12-13T15:33:47.265Z"}
{"name":"UnauthorizedError","message":"jwt expired","code":"invalid_token","status":401,"inner":{"name":"TokenExpiredError","message":"jwt expired","expiredAt":"2020-12-13T14:04:50.000Z"},"level":"error","timestamp":"2020-12-13T15:33:47.266Z"}
{"level":"error","message":"undefined","timestamp":"2020-12-13T15:43:23.522Z"}
{"message":"{\"message\":\"Association with alias \\\"teller_id\\\" does not exist on Queue\",\"statusCode\":500}","level":"error","timestamp":"2020-12-13T15:43:23.523Z"}
{"level":"error","message":"undefined","timestamp":"2020-12-13T15:43:23.524Z"}
{"level":"error","message":"undefined","timestamp":"2020-12-13T15:43:32.575Z"}
{"message":"{\"message\":\"Association with alias \\\"tellerId\\\" does not exist on Queue\",\"statusCode\":500}","level":"error","timestamp":"2020-12-13T15:43:32.575Z"}
{"level":"error","message":"undefined","timestamp":"2020-12-13T15:43:32.577Z"}
{"level":"error","message":"undefined","timestamp":"2020-12-13T15:44:07.033Z"}
{"message":"{\"message\":\"attr.includes is not a function\",\"statusCode\":500}","level":"error","timestamp":"2020-12-13T15:44:07.034Z"}
{"level":"error","message":"undefined","timestamp":"2020-12-13T15:44:07.034Z"}
{"level":"error","message":"undefined","timestamp":"2020-12-13T15:44:14.359Z"}
{"message":"{\"message\":\"attr.includes is not a function\",\"statusCode\":500}","level":"error","timestamp":"2020-12-13T15:44:14.360Z"}
{"level":"error","message":"undefined","timestamp":"2020-12-13T15:44:14.360Z"}
{"name":"SequelizeDatabaseError","parent":{"fatal":false,"errno":1054,"sqlState":"42S22","code":"ER_BAD_FIELD_ERROR","sql":"SELECT `id`, `queue_number`, `status`, `created_at` AS `createdAt`, `updated_at` AS `updatedAt`, `deleted_at` AS `deletedAt`, `user_id` AS `UserId`, `service_id` AS `ServiceId`, `tellerId` FROM `queues` AS `Queue` WHERE (`Queue`.`deleted_at` IS NULL AND `Queue`.`id` = '3');"},"original":{"fatal":false,"errno":1054,"sqlState":"42S22","code":"ER_BAD_FIELD_ERROR","sql":"SELECT `id`, `queue_number`, `status`, `created_at` AS `createdAt`, `updated_at` AS `updatedAt`, `deleted_at` AS `deletedAt`, `user_id` AS `UserId`, `service_id` AS `ServiceId`, `tellerId` FROM `queues` AS `Queue` WHERE (`Queue`.`deleted_at` IS NULL AND `Queue`.`id` = '3');"},"sql":"SELECT `id`, `queue_number`, `status`, `created_at` AS `createdAt`, `updated_at` AS `updatedAt`, `deleted_at` AS `deletedAt`, `user_id` AS `UserId`, `service_id` AS `ServiceId`, `tellerId` FROM `queues` AS `Queue` WHERE (`Queue`.`deleted_at` IS NULL AND `Queue`.`id` = '3');","level":"error","message":"undefined","timestamp":"2020-12-13T15:44:27.453Z"}
{"message":"{\"message\":\"(conn=853, no: 1054, SQLState: 42S22) Unknown column 'tellerId' in 'field list'\\nsql: SELECT `id`, `queue_number`, `status`, `created_at` AS `createdAt`, `updated_at` AS `updatedAt`, `deleted_at` AS `deletedAt`, `user_id` AS `UserId`, `service_id` AS `ServiceId`, `tellerId` FROM `queues` AS `Queue` WHERE (`Queue`.`deleted_at` IS NULL AND `Queue`.`id` = '3'); - parameters:[]\",\"statusCode\":500}","level":"error","timestamp":"2020-12-13T15:44:27.453Z"}
{"name":"SequelizeDatabaseError","parent":{"fatal":false,"errno":1054,"sqlState":"42S22","code":"ER_BAD_FIELD_ERROR","sql":"SELECT `id`, `queue_number`, `status`, `created_at` AS `createdAt`, `updated_at` AS `updatedAt`, `deleted_at` AS `deletedAt`, `user_id` AS `UserId`, `service_id` AS `ServiceId`, `tellerId` FROM `queues` AS `Queue` WHERE (`Queue`.`deleted_at` IS NULL AND `Queue`.`id` = '3');"},"original":{"fatal":false,"errno":1054,"sqlState":"42S22","code":"ER_BAD_FIELD_ERROR","sql":"SELECT `id`, `queue_number`, `status`, `created_at` AS `createdAt`, `updated_at` AS `updatedAt`, `deleted_at` AS `deletedAt`, `user_id` AS `UserId`, `service_id` AS `ServiceId`, `tellerId` FROM `queues` AS `Queue` WHERE (`Queue`.`deleted_at` IS NULL AND `Queue`.`id` = '3');"},"sql":"SELECT `id`, `queue_number`, `status`, `created_at` AS `createdAt`, `updated_at` AS `updatedAt`, `deleted_at` AS `deletedAt`, `user_id` AS `UserId`, `service_id` AS `ServiceId`, `tellerId` FROM `queues` AS `Queue` WHERE (`Queue`.`deleted_at` IS NULL AND `Queue`.`id` = '3');","level":"error","message":"undefined","timestamp":"2020-12-13T15:44:27.454Z"}
